{"version":3,"sources":["components/search-and-display/search-and-display.jsx","components/show-favorites/show-favorites.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchAndDisplay","notifyAddFavorite","useState","searchReturnValue","setSearchReturnValue","subRedditInputValue","setSubRedditInputValue","limitValue","setLimitValue","inputRef","useRef","handleChange","event","target","value","id","className","onSubmit","preventDefault","axios","get","then","res","data","children","console","log","catch","error","alert","current","focus","type","name","defaultChecked","onClick","htmlFor","ref","onChange","placeholder","autoFocus","required","icon","faSearch","map","item","index","score","title","subreddit","author","thumbnail","localStorage","setItem","JSON","stringify","splice","handleFavoritePost","split","faSave","href","rel","faExternalLinkAlt","faArrowUp","ShowFavorites","update","Array","localStorageValues","setLocalStorageValues","sortOrder","setSortOrder","localStorageToArray","values","keys","Object","i","length","push","parse","getItem","useEffect","handleSortOrderChange","sort","a","b","faCalendar","faArrowDown","removeItem","faTrashAlt","App","favoriteAdded","setFavoriteAdded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95ed01af.chunk.js","sourcesContent":["import \"./search-and-display.scss\";\r\nimport axios from \"axios\";\r\nimport { useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearch,\r\n  faExternalLinkAlt,\r\n  faArrowUp,\r\n  faSave,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const SearchAndDisplay = ({ notifyAddFavorite }) => {\r\n  const [searchReturnValue, setSearchReturnValue] = useState(null);\r\n  const [subRedditInputValue, setSubRedditInputValue] = useState(\"\");\r\n  const [limitValue, setLimitValue] = useState(\"?limit=10\");\r\n  const inputRef = useRef(null);\r\n\r\n  const handleGetNewHotPosts = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://www.reddit.com/r/${subRedditInputValue}/hot.json${limitValue}`\r\n      )\r\n      .then((res) => {\r\n        const data = res.data.data.children;\r\n        console.log(data);\r\n        setSearchReturnValue(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"No subreddit found with that name. Try again.\");\r\n        setSubRedditInputValue(\"\");\r\n        inputRef.current.focus();\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, id } = event.target;\r\n\r\n    switch (id) {\r\n      case \"subreddit\":\r\n        setSubRedditInputValue(value);\r\n        break;\r\n      case \"limit-10\":\r\n        setLimitValue(\"?limit=10\");\r\n        break;\r\n      case \"limit-50\":\r\n        setLimitValue(\"?limit=50\");\r\n        break;\r\n      case \"limit-100\":\r\n        setLimitValue(\"?limit=100\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFavoritePost = (\r\n    index,\r\n    name,\r\n    score,\r\n    title,\r\n    subreddit,\r\n    author,\r\n    thumbnail\r\n  ) => {\r\n    console.log(\"Title: \" + title + \"\\nScore: \" + score + \"\\nName: \" + name);\r\n    localStorage.setItem(\r\n      name,\r\n      JSON.stringify({\r\n        name: name,\r\n        title: title,\r\n        score: score,\r\n        subreddit: subreddit,\r\n        author: author,\r\n        thumbnail: thumbnail,\r\n      })\r\n    );\r\n    notifyAddFavorite();\r\n    searchReturnValue.splice(index, 1);\r\n    setSearchReturnValue([...searchReturnValue]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-and-display\">\r\n      <div className=\"search-group\">\r\n        <form onSubmit={handleGetNewHotPosts}>\r\n          <div className=\"radios-group\">\r\n            <div className=\"radios\">\r\n              <input\r\n                type=\"radio\"\r\n                id=\"limit-10\"\r\n                name=\"search-limit\"\r\n                value=\"limit-10\"\r\n                defaultChecked\r\n                onClick={handleChange}\r\n              />\r\n              <label htmlFor=\"limit-10\">10</label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"limit-50\"\r\n                name=\"search-limit\"\r\n                value=\"limit-50\"\r\n                onClick={handleChange}\r\n              />\r\n              <label htmlFor=\"limit-50\">50</label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"limit-100\"\r\n                name=\"search-limit\"\r\n                value=\"limit-50\"\r\n                onClick={handleChange}\r\n              />\r\n              <label htmlFor=\"limit-100\">100</label>\r\n            </div>\r\n          </div>\r\n          <input\r\n            ref={(ref) => (inputRef.current = ref)}\r\n            id=\"subreddit\"\r\n            name=\"subreddit\"\r\n            type=\"text\"\r\n            value={subRedditInputValue}\r\n            onChange={handleChange}\r\n            placeholder=\"Search...\"\r\n            autoFocus\r\n            required\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon icon={faSearch} className=\"faicon\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {searchReturnValue ? (\r\n        <div className=\"content\">\r\n          <div className=\"grid-item\">\r\n            <div className=\"results-list\">\r\n              {searchReturnValue.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"favorite-item\">\r\n                    <div className=\"options-wrapper\">\r\n                      <button\r\n                        onClick={() =>\r\n                          handleFavoritePost(\r\n                            index,\r\n                            item.data.name.split(\"_\")[1],\r\n                            item.data.score,\r\n                            item.data.title,\r\n                            item.data.subreddit,\r\n                            item.data.author,\r\n                            item.data.thumbnail\r\n                          )\r\n                        }\r\n                      >\r\n                        <FontAwesomeIcon icon={faSave} className=\"faicon\" />\r\n                      </button>\r\n                      <button>\r\n                        <a\r\n                          href={`https://www.reddit.com/r/${item.data.subreddit}/comments/${item.data.name}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faExternalLinkAlt}\r\n                            className=\"faicon\"\r\n                          />\r\n                        </a>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"post-details\">\r\n                      <div className=\"post-subreddit grid-item\">\r\n                        <span>r/ </span>\r\n                        {item.data.subreddit}\r\n                      </div>\r\n                      <div className=\"post-author grid-item\">\r\n                        <span>op </span> {item.data.author}\r\n                      </div>\r\n                      <div className=\"post-stars grid-item\">\r\n                        <FontAwesomeIcon icon={faArrowUp} className=\"faicon\" />{\" \"}\r\n                        {item.data.score}\r\n                      </div>\r\n                      <div className=\"post-title\">{item.data.title}</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results-yet\">\r\n          Go head, search for your favorite subreddit.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import \"./show-favorites.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowDown,\r\n  faArrowUp,\r\n  faCalendar,\r\n  faExternalLinkAlt,\r\n  faTrashAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const ShowFavorites = ({ update }) => {\r\n  const [localStorageValues, setLocalStorageValues] = useState(new Array(0));\r\n  const [sortOrder, setSortOrder] = useState(\"date\");\r\n\r\n  const localStorageToArray = () => {\r\n    var values = [],\r\n      keys = Object.keys(localStorage),\r\n      i = keys.length;\r\n\r\n    while (i--) {\r\n      values.push(JSON.parse(localStorage.getItem(keys[i])));\r\n    }\r\n\r\n    setLocalStorageValues(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorageToArray();\r\n  }, [update]);\r\n\r\n  const handleUnfavoritePost = (name) => {\r\n    console.log(\"Removing \" + name + \" from favorites.\");\r\n    localStorage.removeItem(name);\r\n    localStorageToArray();\r\n  };\r\n\r\n  const handleSortOrderChange = (event) => {\r\n    const { name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"date\":\r\n        localStorageToArray();\r\n        setSortOrder(\"date\");\r\n        break;\r\n      case \"upvote-desc\":\r\n        localStorageValues.sort((a, b) => b.score - a.score);\r\n        setLocalStorageValues(localStorageValues);\r\n        setSortOrder(\"upvote-desc\");\r\n        break;\r\n      case \"upvote-asc\":\r\n        localStorageValues.sort((a, b) => a.score - b.score);\r\n        setLocalStorageValues(localStorageValues);\r\n        setSortOrder(\"upvote-asc\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"show-favorites\">\r\n      <div className=\"sort-options\">\r\n        <div className=\"title\">Saved Posts</div>\r\n        <div className=\"buttons\">\r\n          <span className=\"tiny-title\">sort:</span>\r\n          <button\r\n            name=\"date\"\r\n            className={sortOrder === \"date\" ? \"selected\" : \"\"}\r\n            onClick={handleSortOrderChange}\r\n          >\r\n            <FontAwesomeIcon icon={faCalendar} className=\"faicon\" />\r\n          </button>\r\n          <button\r\n            name=\"upvote-desc\"\r\n            className={sortOrder === \"upvote-desc\" ? \"selected\" : \"\"}\r\n            onClick={handleSortOrderChange}\r\n          >\r\n            <FontAwesomeIcon icon={faArrowUp} className=\"faicon\" />\r\n          </button>\r\n          <button\r\n            name=\"upvote-asc\"\r\n            className={sortOrder === \"upvote-asc\" ? \"selected\" : \"\"}\r\n            onClick={handleSortOrderChange}\r\n          >\r\n            <FontAwesomeIcon icon={faArrowDown} className=\"faicon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {localStorageValues.length ? (\r\n        <div className=\"content\">\r\n          <div className=\"grid-item\">\r\n            <div className=\"results-list\">\r\n              {localStorageValues.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"favorite-item\">\r\n                    <div className=\"options-wrapper\">\r\n                      <button onClick={() => handleUnfavoritePost(item.name)}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} className=\"faicon\" />\r\n                      </button>\r\n                      <button>\r\n                        <a\r\n                          href={`https://www.reddit.com/r/${item.subreddit}/comments/${item.name}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            icon={faExternalLinkAlt}\r\n                            className=\"faicon\"\r\n                          />\r\n                        </a>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"post-details\">\r\n                      <div className=\"post-subreddit grid-item\">\r\n                        <span>r/ </span>\r\n                        {item.subreddit}\r\n                      </div>\r\n                      <div className=\"post-author grid-item\">\r\n                        <span>op </span> {item.author}\r\n                      </div>\r\n                      <div className=\"post-stars grid-item\">\r\n                        <FontAwesomeIcon icon={faArrowUp} className=\"faicon\" />{\" \"}\r\n                        {item.score}\r\n                      </div>\r\n                      <div className=\"post-title\">{item.title}</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-results-yet\">\r\n          Try favoriting a post! They will show up here.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./App.scss\";\n\nimport { SearchAndDisplay } from \"./components/search-and-display/search-and-display\";\nimport { ShowFavorites } from \"./components/show-favorites/show-favorites\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [favoriteAdded, setFavoriteAdded] = useState(false);\n  const handleAddFavorite = () => {\n    setFavoriteAdded(!favoriteAdded);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <FontAwesomeIcon icon={faSave} className=\"faicon\" />{\" \"}\n          <span>Reddit</span>\n        </div>\n      </header>\n      <section className=\"App-content\">\n        <SearchAndDisplay notifyAddFavorite={handleAddFavorite} />\n        <ShowFavorites update={favoriteAdded} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}